{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/Card.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","ErrorModal","onCancel","onClear","header","show","footer","Card","style","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","Map","mapRef","center","zoom","map","window","google","maps","Marker","position","ref","PlaceItem","auth","useContext","AuthContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","cancelDeleteHandler","confirmDeleteHandler","process","id","Authorization","token","onDelete","address","coordinates","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","creatorId","PlaceList","items","length","place","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","history","useHistory","places","fetchPlaces","deletedPlaceId","prevPlaces"],"mappings":"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","file":"static/js/5.efb71dbf.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = (props) => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n    const [isLoading, setIsLoading]  = useState(false);\n    const [error, setError] = useState();\n\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\n        setIsLoading(true);\n        const httpAbortCtrl = new AbortController();\n        activeHttpRequests.current.push(httpAbortCtrl);\n        try {\n            const response = await fetch(url, {\n                method,\n                body,\n                headers,\n                signal: httpAbortCtrl.signal\n            });\n    \n            const responseData = await response.json();\n\n            activeHttpRequests.current = activeHttpRequests.current.filter(\n                reqCtrl => reqCtrl !== httpAbortCtrl\n            );\n    \n            if (!response.ok) {\n                throw new Error(responseData.message);\n            }\n            setIsLoading(false);\n            return responseData;\n        } catch (err) {\n            setError(err.message);\n            setIsLoading(false);\n            throw err;\n        }\n    }, []);\n\n    const clearError = () => {\n        setError(null);\n    }\n\n    useEffect(() => {\n        return () => {\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\n        }\n    }, []);\n\n    return { isLoading, error, sendRequest, clearError }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = (props) => {\n    const content = (\n        <div className={`modal ${props.className}`} style={props.style}>\n            <header className=\"modal__header\">\n                <h2>{props.header}</h2>\n            </header>\n            <form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()}>\n                <div className={`modal__content ${props.contentClass}`}>\n                    {props.children}\n                </div>\n                <footer className={`modal__footer ${props.footerClass}`}>\n                    {props.footer}\n                </footer>\n            </form>\n        </div>\n    );\n    return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n}\n\nconst Modal = (props) => {\n    return (\n        <React.Fragment>\n            {props.show && <Backdrop onClick={props.onCancel} />}\n            <CSSTransition\n                in={props.show}\n                mountOnEnter\n                unmountOnExit\n                timeout={200}\n                classNames=\"modal\"\n            >\n                <ModalOverlay {...props} /> \n            </CSSTransition>\n        </React.Fragment>\n    );\n}\n\nexport default Modal;\n","import React, { useEffect, useRef } from 'react';\n\nimport './Map.css';\n\nconst Map = (props) => {\n    const mapRef = useRef();\n    \n    const { center, zoom } = props;\n\n    // rerun the function when center or zoom get changed\n    useEffect(() => {\n        const map = new window.google.maps.Map(mapRef.current, {\n            center: center,\n            zoom: zoom\n        });\n    \n        new window.google.maps.Marker({position: center, map: map });\n    }, [center, zoom]);\n\n    \n    return (\n        <div ref={mapRef} className={`map ${props.className}`} style={props.style}></div>\n    );\n}\n\nexport default Map;\n","import React, { useState, useContext } from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport Map from '../../shared/components/UIElements/Map';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport './PlaceItem.css';\n\nconst PlaceItem = (props) => {\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const auth = useContext(AuthContext);\n    const [showMap, setShowMap] = useState(false);\n    const [showConfirmModal, setShowConfirmModal] = useState(false);\n    \n    const openMapHandler = () => setShowMap(true);\n\n    const closeMapHandler = () => setShowMap(false);\n\n    const showDeleteWarningHandler = () => setShowConfirmModal(true);\n\n    const cancelDeleteHandler = () => setShowConfirmModal(false);\n\n    const confirmDeleteHandler = async () => {\n        setShowConfirmModal(false);\n        try {\n            await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${props.id}`, \n            'DELETE',\n            null,\n            {\n                Authorization: 'Bearer ' + auth.token\n            });\n            props.onDelete(props.id);\n        } catch (err) {}\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={clearError} />\n            <Modal \n                show={showMap} \n                onCancel={closeMapHandler} \n                header={props.address} \n                contentClass=\"place-item__modal-content\"\n                footerClass=\"place-item__modal-actions\"\n                footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n            >\n                <div className=\"map-container\">\n                    <Map center={props.coordinates} zoom={16} />\n                </div>\n            </Modal>\n            <Modal\n                show={showConfirmModal} \n                onCancel={cancelDeleteHandler}\n                header=\"Are you sure?\" \n                footerClass=\"place-item__modal-actions\" \n                footer={\n                <React.Fragment>\n                    <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\n                    <Button danger onClick={confirmDeleteHandler}>DELETE</Button>\n                </React.Fragment>\n            }>\n                <p>Are you sure you want to proceed?</p>\n            </Modal>\n            <li className=\"place-item\">\n                <Card className=\"place-item__content\">\n                    { isLoading && <LoadingSpinner asOverlay/>}\n                    <div className=\"place-item__image\">\n                        <img src={`${process.env.REACT_APP_ASSET_URL}/${props.image}`} alt={props.title} />\n                    </div>\n                    <div className=\"place-item__info\">\n                        <h2>{props.title}</h2>\n                        <h3>{props.address}</h3>\n                        <p>{props.description}</p>\n                    </div>\n                    <div className=\"place-item__actions\">\n                        <Button inverse onClick={openMapHandler}>VIEW ON MAP</Button>\n                        { auth.userId === props.creatorId && <Button to={`/places/${props.id}`}>EDIT</Button> }\n                        { auth.userId === props.creatorId && <Button danger onClick={showDeleteWarningHandler}>DELETE</Button> }\n                        {/* <Button to={`/places/${props.id}`}>EDIT</Button>\n                        <Button danger onClick={showDeleteWarningHandler}>DELETE</Button> */}\n                    </div>\n                </Card>\n            </li>\n        </React.Fragment>\n    );\n}\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport PlaceItem from './PlaceItem';\nimport './PlaceList.css';\n\nconst PlaceList = (props) => {\n    if (props.items.length === 0) {\n        return (\n            <div className=\"place-list center\">\n                <Card>\n                    <h2>No places found. Maybe create one?</h2>\n                    <Button to=\"/places/new\">Share Place</Button>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <ul className=\"place-list\">\n            {props.items.map(place => \n            <PlaceItem \n                key={place.id} \n                id={place.id} \n                image={place.image} \n                title={place.title}\n                description={place.description}\n                address={place.address}\n                creatorId={place.creator}\n                coordinates={place.location}\n                onDelete={props.onDeletePlace}\n            />)}\n        </ul>\n    );\n};\n\nexport default PlaceList;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory} from 'react-router-dom';\n\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport PlaceList from '../components/PlaceList';\nimport { AuthContext } from \"../../shared/context/auth-context\";\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst UserPlaces = () => {\n    const auth = useContext(AuthContext);\n    const { isLoading, error, sendRequest, clearError } = useHttpClient();\n    const [ loadedPlaces, setLoadedPlaces ] = useState();\n\n    const userId = useParams().userId;\n    const history = useHistory();\n\n    const placeDeletedHandler = deletedPlaceId => {\n        setLoadedPlaces(prevPlaces => {\n            prevPlaces.filter(place => place.id !== deletedPlaceId);\n        })\n    }\n\n    useEffect(() => {\n        const fetchPlaces = async () => {\n            \n            try {\n                const responseData = await sendRequest(process.env.REACT_APP_BACKEND_URL + `/places/user/${userId}`, 'GET', null, {\n                    Authorization: 'Bearer ' + auth.token\n                });\n                setLoadedPlaces(responseData.places);\n            } catch (err) {}\n        }\n        fetchPlaces();\n    }, [sendRequest, userId]);\n\n    const returnHandler = () => {\n        history.push('/')\n    }\n\n    return (\n        <React.Fragment>\n            <ErrorModal error={error} onClear={returnHandler} />\n            {isLoading && (\n                <div className=\"center\">\n                    <LoadingSpinner />\n                </div>\n            )}\n            {!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeletedHandler} />}\n        </React.Fragment>\n    );\n}\n\nexport default UserPlaces;\n"],"sourceRoot":""}