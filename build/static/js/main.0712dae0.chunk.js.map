{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","App.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","ModifyPlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","tokenExpirationData","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.0712dae0.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n    isLoggedIn: false,\n    userId: null,\n    token: null,\n    login: () => {},\n    logout: () => {}\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = (props) => {\n    return ReactDOM.createPortal(\n        <div className=\"backdrop\" onClick={props.onClick}></div>,\n        document.getElementById('backdrop-hook')\n    );\n}\n\nexport default Backdrop;\n","import React, { useState, useCallback, useEffect, Suspense } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\n\n// import Auth from './user/pages/Auth';\n// import Users from './user/pages/Users';\n// import NewPlace from './places/pages/NewPlace';\n// import UserPlaces from './places/pages/UserPlaces';\n// import UpdatePlace from './places/pages/UpdatePlace';\n// import ModifyPlace from './places/pages/ModifyPlaces';\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\nimport { AuthContext } from './shared/context/auth-context';\nimport LoadingSpinner from './shared/components/UIElements/LoadingSpinner';\n\nlet logoutTimer;\n\nconst Users = React.lazy(() => import('./user/pages/Users'));\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'));\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'));\nconst ModifyPlace = React.lazy(() => import('./places/pages/ModifyPlaces'));\nconst Auth = React.lazy(() => import('./user/pages/Auth'));\n\nconst App = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState(false);\n\n  const login = useCallback((uid, token, expirationDate) => {\n    setToken(token);\n    setUserId(uid);\n    const tokenExpirationData = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    localStorage.setItem('userData', JSON.stringify({ userId: uid, token: token, expiration: tokenExpirationData.toISOString() }));\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\n    }\n  }, [login]);\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places'>\n          <UserPlaces />\n        </Route>\n        <Route path='/places/new' exact>\n          <NewPlace />\n        </Route>\n        {/* <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route> */}\n        <Route path=\"/places/:placeId\">\n          <ModifyPlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places'>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\"/>\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider value={{ isLoggedIn: !!token, token: token, userId: userId, login: login, logout: logout }}>\n      <Router>\n        <MainNavigation />\n        <main>\n          <Switch>\n            <Suspense fallback={<div className=\"center\"><LoadingSpinner /></div>}>{routes}</Suspense>\n          </Switch>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = (props) => {\n    return (\n        <header className='main-header'>\n            {props.children}\n        </header>\n    );\n};\n\nexport default MainHeader;\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { AuthContext } from '../../context/auth-context';\nimport './NavLinks.css';\n\nconst NavLinks = (props) => {\n    // the entire component will re-render if the auth gets update\n    const auth = useContext(AuthContext);\n\n    return (\n        <ul className='nav-links'>\n            <li>\n                <NavLink to='/' exact>ALL USERS</NavLink>\n            </li>\n            {auth.isLoggedIn && (\n                <li>\n                    <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n                </li>\n            )}\n            {auth.isLoggedIn && (\n                <li>\n                    <NavLink to='/places/new'>ADD PLACE</NavLink>\n                </li>\n            )}\n            {!auth.isLoggedIn && (\n                <li>\n                    <NavLink to='/auth'>AUTHENTICATE</NavLink>\n                </li>\n            )}\n            {auth.isLoggedIn && (\n                <li>\n                    <button onClick={auth.logout}>LOGOUT</button>\n                </li>\n            )}\n        </ul>\n    );\n};\n\nexport default NavLinks;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport './SideDrawer.css';\n\nconst SideDrawer = (props) => {\n    const content = (\n    <CSSTransition\n        in={props.show}\n        timeout={200}\n        classNames=\"slide-in-left\"\n        mountOnEnter\n        unmountOnExit\n    >\n        <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\n    </CSSTransition> \n    );\n\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\n};\n\nexport default SideDrawer;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport './MainNavigation.css';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport Backdrop from '../UIElements/Backdrop';\n\nconst MainNavigation = () => {\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n    const openDrawerHandler = () => {\n        setDrawerIsOpen(true);\n    };\n    const closeDrawerHandler = () => {\n        setDrawerIsOpen(false);\n    };\n\n    return (\n        <React.Fragment>\n            {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n            {drawerIsOpen && <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n                <nav className='main-navigation__drawer-nav'>\n                    <NavLinks />\n                </nav>\n            </SideDrawer>}\n            <MainHeader>\n                <button className='main-navigation__menu-btn' onClick={openDrawerHandler}>\n                    <span />\n                    <span />\n                    <span />\n                </button>\n                <h1 className='main-navigation__title'>\n                    <Link to='/'>Your places</Link>\n                </h1>\n                <nav className='main-navigation__header-nav'>\n                    <NavLinks />\n                </nav>\n            </MainHeader>\n        </React.Fragment>\n    );\n};\n\nexport default MainNavigation;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}